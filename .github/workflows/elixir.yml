name: Elixir CI

on: [push, pull_request]

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # cache the ASDF directory, using the values from .tool-versions
    - name: ASDF cache
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
      id: asdf-cache
    # only run `asdf install` if we didn't hit the cache
    - uses: asdf-vm/actions/install@v1
      if: steps.asdf-cache.outputs.cache-hit != 'true'

  build:
    needs: [asdf]
    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # cache the ASDF directory, using the values from .tool-versions
    - name: ASDF cache
      uses: actions/cache@v2
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
    - name: Setup ASDF environment
      run: |
        ASDF_DIR=$HOME/.asdf
        echo "ASDF_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "ASDF_DATA_DIR=$ASDF_DIR" >> $GITHUB_ENV
        echo "$ASDF_DIR/bin" >> $GITHUB_PATH
        echo "$ASDF_DIR/shims" >> $GITHUB_PATH
        $ASDF_DIR/bin/asdf reshim
    - name: Restore dependencies cache
      id: deps-cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: |
        mix local.rebar --foce
        mix local.hex --force
        mix deps.get
    - name: Compile (warnings as errors)
      run: mix compile --force --warnings-as-errors
    - name: Check formatting
      run: mix format --check-formatted
    - name: Credo
      run: mix credo --strict
    - name: Run tests
      run: mix test --cover
    - name: Save PR information
      run: |
        echo "${{ github.event.pull_request.number }}" > coverage/PR_NUMBER
        echo "${{ github.event.pull_request.head.sha }}" > coverage/PR_SHA
      if: github.event.pull_request
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: elixir-lcov
        path: coverage/
    - uses: mbta/actions/dialyzer@v1
